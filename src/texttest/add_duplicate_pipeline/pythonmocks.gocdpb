<-PYT:import requests
<-PYT:requests.get('http://localhost:8153/go/admin/restful/configuration/file/GET/xml')
->RET:Instance('Response(object)', 'response1')
<-PYT:response1.headers
->RET:Instance('CaseInsensitiveDict(_abcoll.MutableMapping)', 'caseinsensitivedict1')
<-PYT:caseinsensitivedict1.__getitem__('x-cruise-config-md5')
->RET:'fd9a6c73103880fcae9916d5fa4f82d9'
<-PYT:response1.text
->RET:u'''<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="76">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="92beffdd-587a-443e-9309-783d29b65eb0" />
  <pipelines group="first">
    <pipeline name="new_pipeline" isLocked="true">
      <materials>
        <git url="git@github.com:sample_repo/example.git" dest="dest" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob" timeout="0">
            <tasks>
              <exec command="ls">
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <environments>
    <environment name="green" />
  </environments>
  <agents>
    <agent hostname="magnus-HP-ZBook" ipaddress="10.13.24.178" uuid="7ff94240-ae14-4784-9b1f-e1ef21586d3e" />
  </agents>
</cruise>

'''
<-PYT:requests.post('http://localhost:8153/go/admin/restful/configuration/file/POST/xml', data={'md5': 'fd9a6c73103880fcae9916d5fa4f82d9',
 'xmlFile': '''<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="76" xsi:noNamespaceSchemaLocation="cruise-config.xsd">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="92beffdd-587a-443e-9309-783d29b65eb0" />
  <pipelines group="first">
    <pipeline isLocked="true" name="new_pipeline">
      <materials>
        <git dest="dest" url="git@github.com:sample_repo/example.git" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob" timeout="0">
            <tasks>
              <exec command="ls">
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <environments>
    <environment name="green">

    </environment>
  </environments>
  <agents>
    <agent hostname="magnus-HP-ZBook" ipaddress="10.13.24.178" uuid="7ff94240-ae14-4784-9b1f-e1ef21586d3e" />
  </agents>
</cruise>
'''})
->RET:Instance('Response', 'response2')
<-PYT:response2.status_code
->RET:200
<-PYT:requests.post('http://localhost:8153/go/api/admin/pipelines', data='{"pipeline": {"enable_pipeline_locking": true, "label_template": "${COUNT}", "materials": [{"attributes": {"name": null, "url": "git@github.com:sample_repo/example.git", "destination": "dest", "submodule_folder": null, "filter": null, "auto_update": true, "branch": "master"}, "type": "git"}], "template": null, "stages": [{"clean_working_directory": false, "name": "defaultStage", "never_cleanup_artifacts": false, "fetch_materials": true, "environment_variables": [], "approval": {"type": "success", "authorization": {"users": [], "roles": []}}, "jobs": [{"run_instance_count": null, "tasks": [{"attributes": {"working_directory": null, "command": "ls", "run_if": ["passed"]}, "type": "exec"}], "name": "defaultJob", "timeout": 0, "environment_variables": [], "resources": []}]}], "name": "new_pipeline"}, "group": "first"}', headers={'Accept': 'application/vnd.go.cd.v1+json', 'Content-Type': 'application/json'})
->RET:Instance('Response', 'response3')
<-PYT:response3.status_code
->RET:422
<-PYT:response3.text
->RET:u'''{
  "message": "Validations failed for pipeline \'new_pipeline\'. Please correct and resubmit.",
  "data": {
    "errors": {
      "name": [
        "You have defined multiple pipelines named \'new_pipeline\'. Pipeline names must be unique."
      ]
    },
    "_links": {
      "self": {
        "href": "http://localhost:8153/go/api/admin/pipelines/new_pipeline"
      },
      "doc": {
        "href": "http://api.go.cd/#pipeline_config"
      },
      "find": {
        "href": "http://localhost:8153/go/api/admin/pipelines/:name"
      }
    },
    "label_template": "${COUNT}",
    "enable_pipeline_locking": true,
    "name": "new_pipeline",
    "template": null,
    "parameters": [

    ],
    "environment_variables": [

    ],
    "materials": [
      {
        "type": "git",
        "attributes": {
          "url": "git@github.com:sample_repo/example.git",
          "destination": "dest",
          "filter": null,
          "name": null,
          "auto_update": true,
          "branch": "master",
          "submodule_folder": null
        }
      }
    ],
    "stages": [
      {
        "name": "defaultStage",
        "fetch_materials": true,
        "clean_working_directory": false,
        "never_cleanup_artifacts": false,
        "approval": {
          "type": "success",
          "authorization": {
            "roles": [

            ],
            "users": [

            ]
          }
        },
        "environment_variables": [

        ],
        "jobs": [
          {
            "name": "defaultJob",
            "run_instance_count": null,
            "timeout": "never",
            "environment_variables": [

            ],
            "resources": [

            ],
            "tasks": [
              {
                "type": "exec",
                "attributes": {
                  "run_if": [
                    "passed"
                  ],
                  "on_cancel": null,
                  "command": "ls",
                  "working_directory": null
                }
              }
            ],
            "tabs": [

            ],
            "artifacts": [

            ],
            "properties": null
          }
        ]
      }
    ],
    "tracking_tool": null,
    "timer": null
  }
}
'''
