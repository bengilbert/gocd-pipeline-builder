<-PYT:import requests
<-PYT:requests.request('GET', 'http://localhost:8153/go/admin/restful/configuration/file/GET/xml', auth=('gouser', 'verysecret'))
->RET:Instance('Response(object)', 'response_get')
<-PYT:response_get.status_code
->RET:200
<-PYT:response_get.headers
->RET:Instance('CaseInsensitiveDict(_abcoll.MutableMapping)', 'caseinsensitivedict1')
<-PYT:caseinsensitivedict1.__getitem__('x-cruise-config-md5')
->RET:'caac2ed2d4008afe9dfc06d83ac7b7a8'
<-PYT:response_get.text
->RET:u'''<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="78">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="UUID">
    <security>
      <passwordFile path="/etc/go/htpasswd" />
      <admins>
        <user>gouser</user>
      </admins>
    </security>
  </server>
  <pipelines group="first">
    <pipeline name="p1" template="T1">
      <materials>
        <git url="https://github.com/magnus-lycka/gocd-pipeline-builder.git" />
      </materials>
    </pipeline>
    <pipeline name="p2" isLocked="false" template="t2">
      <materials>
        <git url="https://github.com/magnus-lycka/gocd-pipeline-builder.git" />
      </materials>
    </pipeline>
    <pipeline name="recipe" isLocked="false">
      <materials>
        <git url="https://github.com/magnus-lycka/gocd-pipeline-builder.git" />
        <pipeline pipelineName="p1" stageName="defaultStage" materialName="p1" />
        <pipeline pipelineName="p2" stageName="defaultStage" materialName="p2" />
        <pipeline pipelineName="put_pipeline_with_template_in_upstream_pipeline" stageName="defaultStage" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <fetchartifact pipeline="put_pipeline_with_template_in_upstream_pipeline" stage="defaultStage" job="defaultJob" srcfile="message.txt" dest="upstream_put_pipeline_with_template_in_upstream_pipeline">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="p1" stage="defaultStage" job="defaultJob" srcfile="artifact.txt" dest="upstream_p1">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="p2" stage="defaultStage" job="defaultJob" srcfile="artifact.txt" dest="upstream_p2">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>echo $SHELL $GO_PIPELINE_LABEL</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="put_pipeline_with_template_in_upstream_pipeline" template="t2">
      <materials>
        <git url="git@github.com:sample_repo/example.git" dest="put_pipeline_with_template_in_upstream_pipeline" />
      </materials>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="T1">
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>echo $SHELL</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="artifact.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="t2">
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>touch artifact.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="artifact.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <environments>
    <environment name="green">
      <pipelines>
        <pipeline name="p1" />
        <pipeline name="p2" />
        <pipeline name="put_pipeline_with_template_in_upstream_pipeline" />
      </pipelines>
    </environment>
  </environments>
  <agents>
    <agent hostname="HOST" ipaddress="N.N.N.N" uuid="UUID" />
  </agents>
</cruise>

'''
<-PYT:requests.request('POST', 'http://localhost:8153/go/admin/restful/configuration/file/POST/xml', auth=('gouser', 'verysecret'), data={'md5': 'caac2ed2d4008afe9dfc06d83ac7b7a8',
 'xmlFile': '''<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="78" xsi:noNamespaceSchemaLocation="cruise-config.xsd">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="UUID">
    <security>
      <passwordFile path="/etc/go/htpasswd" />
      <admins>
        <user>gouser</user>
      </admins>
    </security>
  </server>
  <pipelines group="first">
  </pipelines>
  <pipelines group="Tjong">
  </pipelines>
  <environments>
    <environment name="green">
    </environment>
  </environments>
  <agents>
    <agent hostname="HOST" ipaddress="N.N.N.N" uuid="UUID" />
  </agents>
</cruise>
'''})
->RET:Instance('Response', 'response_post')
<-PYT:response_post.status_code
->RET:200
<-PYT:requests.request('POST', 'http://localhost:8153/go/api/admin/pipelines', auth=('gouser', 'verysecret'), data='{"group": "first", "pipeline": {"name": "add_pipeline_with_defaults", "materials": [{"type": "git", "attributes": {"url": "git@github.com:magnus-lycka/gocd-pipeline-builder.git", "destination": "add_pipeline_with_defaults", "filter": null, "name": null, "auto_update": true, "branch": "master", "submodule_folder": null}}], "stages": [{"name": "defaultStage", "jobs": [{"name": "defaultJob", "tasks": [{"type": "exec", "attributes": {"command": "ls"}}]}]}]}}', headers={'Accept': 'application/vnd.go.cd.v1+json', 'Content-Type': 'application/json'})
->RET:Instance('Response', 'response_post1')
<-PYT:response_post1.status_code
->RET:200
<-PYT:requests.request('GET', 'http://localhost:8153/go/admin/restful/configuration/file/GET/xml', auth=('gouser', 'verysecret'))
->RET:Instance('Response', 'response_get1')
<-PYT:response_get1.status_code
->RET:200
<-PYT:response_get1.headers
->RET:Instance('CaseInsensitiveDict', 'caseinsensitivedict2')
<-PYT:caseinsensitivedict2.__getitem__('x-cruise-config-md5')
->RET:'7b7f50cb00a7de2b7d9f251e7b0368e7'
<-PYT:response_get1.text
->RET:u'''<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="78">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="UUID">
    <security>
      <passwordFile path="/etc/go/htpasswd" />
      <admins>
        <user>gouser</user>
      </admins>
    </security>
  </server>
  <pipelines group="first">
    <pipeline name="add_pipeline_with_defaults">
      <materials>
        <git url="git@github.com:magnus-lycka/gocd-pipeline-builder.git" dest="add_pipeline_with_defaults" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="ls" />
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Tjong" />
  <environments>
    <environment name="green" />
  </environments>
  <agents>
    <agent hostname="HOST" ipaddress="N.N.N.N" uuid="UUID" />
  </agents>
</cruise>

'''
<-PYT:requests.request('POST', 'http://localhost:8153/go/admin/restful/configuration/file/POST/xml', auth=('gouser', 'verysecret'), data={'md5': '7b7f50cb00a7de2b7d9f251e7b0368e7',
 'xmlFile': '''<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="78" xsi:noNamespaceSchemaLocation="cruise-config.xsd">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="UUID">
    <security>
      <passwordFile path="/etc/go/htpasswd" />
      <admins>
        <user>gouser</user>
      </admins>
    </security>
  </server>
  <pipelines group="first">
    <pipeline name="add_pipeline_with_defaults">
      <materials>
        <git dest="add_pipeline_with_defaults" url="git@github.com:magnus-lycka/gocd-pipeline-builder.git" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="ls" />
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Tjong" />
  <environments>
    <environment name="green">
      <pipelines>
        <pipeline name="add_pipeline_with_defaults" />
      </pipelines>
    </environment>
  </environments>
  <agents>
    <agent hostname="HOST" ipaddress="N.N.N.N" uuid="UUID" />
  </agents>
</cruise>
'''})
->RET:Instance('Response', 'response_post2')
<-PYT:response_post2.status_code
->RET:200
<-PYT:requests.request('GET', u'http://localhost:8153/go/api/pipelines/add_pipeline_with_defaults/status', auth=('gouser', 'verysecret'), headers={'Accept': 'application/json'})
->RET:Instance('Response', 'response_get2')
<-PYT:response_get2.status_code
->RET:200
<-PYT:response_get2.text
->RET:u'{"pausedCause":"Under construction","pausedBy":"gouser","paused":true,"schedulable":false,"locked":false}'
<-PYT:requests.request('GET', 'http://localhost:8153/go/admin/restful/configuration/file/GET/xml', auth=('gouser', 'verysecret'))
->RET:Instance('Response', 'response_get3')
<-PYT:response_get3.status_code
->RET:200
<-PYT:response_get3.headers
->RET:Instance('CaseInsensitiveDict', 'caseinsensitivedict3')
<-PYT:caseinsensitivedict3.__getitem__('x-cruise-config-md5')
->RET:'e375398ce9837a7849aa2f4c8726ce9b'
<-PYT:response_get3.text
->RET:u'''<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="78">
  <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="UUID">
    <security>
      <passwordFile path="/etc/go/htpasswd" />
      <admins>
        <user>gouser</user>
      </admins>
    </security>
  </server>
  <pipelines group="first">
    <pipeline name="add_pipeline_with_defaults">
      <materials>
        <git url="git@github.com:magnus-lycka/gocd-pipeline-builder.git" dest="add_pipeline_with_defaults" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="ls" />
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Tjong" />
  <environments>
    <environment name="green">
      <pipelines>
        <pipeline name="add_pipeline_with_defaults" />
      </pipelines>
    </environment>
  </environments>
  <agents>
    <agent hostname="HOST" ipaddress="N.N.N.N" uuid="UUID" />
  </agents>
</cruise>

'''
